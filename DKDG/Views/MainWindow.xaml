<Window x:Class="DKDG.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:nav="clr-using System.Runtime.Serialization;"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="Dragon Knowledge, Dungeon Gear" Height="900" Width="1600">

    <Window.InputBindings>
        <KeyBinding Command="{Binding ExitCmd}" Gesture="Alt+F4" />
    </Window.InputBindings>

    <md:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
        <md:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <md:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="200">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                    <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"
                             ItemsSource="{Binding Pages}"
                             PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="nav:Page">
                                <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </md:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <md:ColorZone Padding="16" md:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryMid" DockPanel.Dock="Top">
                    <DockPanel>
                        <!--Hamburger Switch to open left drawer menu-->
                        <ToggleButton  DockPanel.Dock="Left" Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False" x:Name="MenuToggleButton" />

                        <!--Three dot popup menu on right of header bar-->
                        <!--<materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                            <StackPanel>
                                <Button Content="Hello World" Click="MenuPopupButton_OnClick" />
                                <Button Content="Nice Popup" Click="MenuPopupButton_OnClick" />
                                <Button Content="Can't Touch This" IsEnabled="False" />
                                <Separator />
                                <Button Content="Goodbye" Click="MenuPopupButton_OnClick" />
                            </StackPanel>
                        </materialDesign:PopupBox>-->

                        <!--Window Title (Big in the middle of header bar-->
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">Dragon's Knowledge &amp; Dungeon's Gear</TextBlock>
                    </DockPanel>
                </md:ColorZone>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ScrollViewer Grid.Row="0"
                                  HorizontalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                                  VerticalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.VerticalScrollBarVisibilityRequirement}">
                        <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Content}" />
                    </ScrollViewer>

                    <!--<materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar" Grid.Row="0" />-->
                </Grid>
            </DockPanel>
        </md:DrawerHost>
    </md:DialogHost>
</Window>

<!--<Window x:Class="DKDG.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:nav="clr-using System.Runtime.Serialization;

using System.Runtime.Serialization;
namespace:DKDG.Models.Navigation"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="1600">

    <Window.InputBindings>
        -->
<!-- Example of Keyboard shortcuts -->
<!--
        <KeyBinding Command="{Binding ExitCmd}" Gesture="Alt+F4" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">

                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="212">

                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                    DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />

                        <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"
                             ItemsSource="{Binding Pages}" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="nav:Page">
                                    <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>

                <DockPanel>
                    <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryMid" DockPanel.Dock="Top">
                        <DockPanel>
                            -->
<!--Hamburger Switch to open left drawer menu-->
<!--
                            <ToggleButton  DockPanel.Dock="Left" Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False" x:Name="MenuToggleButton" />

                            -->
<!--Three dot popup menu on right of header bar-->
<!--
                            <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel>
                                    <Button Content="Hello World" Click="MenuPopupButton_OnClick" />
                                    <Button Content="Nice Popup" Click="MenuPopupButton_OnClick" />
                                    <Button Content="Can't Touch This" IsEnabled="False" />
                                    <Separator />
                                    <Button Content="Goodbye" Click="MenuPopupButton_OnClick" />
                                </StackPanel>
                            </materialDesign:PopupBox>

                            -->
<!--Window Title (Big in the middle of header bar-->
<!--
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">Material Design In XAML Toolkit</TextBlock>
                        </DockPanel>
                    </materialDesign:ColorZone>
                </DockPanel>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </Grid>
</Window>

-->
<!--<Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="8*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Background="{StaticResource PrimaryHueDarkBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Button Grid.Row="0" materialDesign:ShadowAssist.ShadowDepth="Depth0" Content="Characters" />
                <Button Grid.Row="1" materialDesign:ShadowAssist.ShadowDepth="Depth0" Content="Note Book" />
                <Button Grid.Row="2" materialDesign:ShadowAssist.ShadowDepth="Depth0" Content="Items" />
                <Button Grid.Row="3" materialDesign:ShadowAssist.ShadowDepth="Depth0" Content="Spells" />
                <Button Grid.Row="4" materialDesign:ShadowAssist.ShadowDepth="Depth0" Content="Monsters" />
                <Button Grid.Row="5" materialDesign:ShadowAssist.ShadowDepth="Depth0" Content="Browser" />
                <Button Grid.Row="6" materialDesign:ShadowAssist.ShadowDepth="Depth0" Content="Rules" />
            </Grid>

            <Grid Grid.Column="1" DataContext="{Binding CurrentTabVM}">
            </Grid>
        </Grid>-->
<!--<TabControl Grid.Row="1" TabStripPlacement="Left" VerticalAlignment="Stretch" Padding="0,0,0,0" Background="{StaticResource PrimaryHueDarkBrush}" BorderThickness="0">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="FontSize" Value="30" />
                    <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}" />
                    <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border x:Name="Chrome"
                        Background="{StaticResource PrimaryHueDarkBrush}"
                                TextBlock.Foreground="Gray"
                        Padding="10, 5, 10, 5" Margin="0">
                                    <ContentPresenter ContentSource="Header"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <Setter TargetName="Chrome" Property="Background" Value="{StaticResource PrimaryHueMidBrush}" />
                                        <Setter TargetName="Chrome" Property="TextBlock.Foreground" Value="{StaticResource PrimaryHueMidForegroundBrush}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="Characters">
            </TabItem>
            <TabItem Header="Note Book">
            </TabItem>
            <TabItem Header="Items">
            </TabItem>
            <TabItem Header="Spells">
            </TabItem>
        </TabControl>-->
